/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#ifndef SCREEN3VIEWBASE_HPP
#define SCREEN3VIEWBASE_HPP

#include <gui/common/FrontendApplication.hpp>
#include <mvp/View.hpp>
#include <gui/screen3_screen/Screen3Presenter.hpp>
#include <touchgfx/widgets/Box.hpp>
#include <touchgfx/widgets/ScalableImage.hpp>
#include <touchgfx/widgets/TextArea.hpp>
#include <touchgfx/containers/Container.hpp>
#include <touchgfx/containers/buttons/Buttons.hpp>
#include <touchgfx/widgets/TextAreaWithWildcard.hpp>

class Screen3ViewBase : public touchgfx::View<Screen3Presenter>
{
public:
    Screen3ViewBase();
    virtual ~Screen3ViewBase();
    virtual void setupScreen();
    virtual void afterTransition();

    /*
     * Virtual Action Handlers
     */
    virtual void Zid1_x()
    {
        // Override and implement this function in Screen3
    }
    virtual void Nakass1_x()
    {
        // Override and implement this function in Screen3
    }
    virtual void Nakass10_x()
    {
        // Override and implement this function in Screen3
    }
    virtual void Zid10_x()
    {
        // Override and implement this function in Screen3
    }
    virtual void Nakass100_x()
    {
        // Override and implement this function in Screen3
    }
    virtual void Zid100_x()
    {
        // Override and implement this function in Screen3
    }
    virtual void Nakass1000_x()
    {
        // Override and implement this function in Screen3
    }
    virtual void Zid1000_x()
    {
        // Override and implement this function in Screen3
    }
    virtual void Zid1_y()
    {
        // Override and implement this function in Screen3
    }
    virtual void Zid10_y()
    {
        // Override and implement this function in Screen3
    }
    virtual void Zid100_y()
    {
        // Override and implement this function in Screen3
    }
    virtual void Zid1000_y()
    {
        // Override and implement this function in Screen3
    }
    virtual void Nakass1_y()
    {
        // Override and implement this function in Screen3
    }
    virtual void Nakass10_y()
    {
        // Override and implement this function in Screen3
    }
    virtual void Nakass100_y()
    {
        // Override and implement this function in Screen3
    }
    virtual void Nakass1000_y()
    {
        // Override and implement this function in Screen3
    }
    virtual void Zid1R()
    {
        // Override and implement this function in Screen3
    }
    virtual void Nakass1R()
    {
        // Override and implement this function in Screen3
    }
    virtual void Go()
    {
        // Override and implement this function in Screen3
    }
    virtual void Rotate()
    {
        // Override and implement this function in Screen3
    }
    virtual void SetTestingRobotSghir()
    {
        // Override and implement this function in Screen3
    }

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
    }

    /*
     * Member Declarations
     */
    touchgfx::Box __background;
    touchgfx::ScalableImage scalableImage2;
    touchgfx::TextArea RotateTestString;
    touchgfx::Container containerNbreRO;
    touchgfx::ImageButtonStyle< touchgfx::TouchButtonTrigger >  nakass1n;
    touchgfx::ScalableImage scalableImage1;
    touchgfx::TextAreaWithOneWildcard valRotation;
    touchgfx::ImageButtonStyle< touchgfx::TouchButtonTrigger >  zid1n;
    touchgfx::Container RotationCont;
    touchgfx::BoxWithBorderButtonStyle< touchgfx::TouchButtonTrigger >  RotateButton;
    touchgfx::TextArea Rotation;
    touchgfx::TextArea NavString;
    touchgfx::Container GO;
    touchgfx::BoxWithBorderButtonStyle< touchgfx::TouchButtonTrigger >  GOButton;
    touchgfx::TextArea textArea1_1;
    touchgfx::Container yCont;
    touchgfx::ScalableImage scalableImage1_1;
    touchgfx::TextAreaWithOneWildcard valY;
    touchgfx::ImageButtonStyle< touchgfx::TouchButtonTrigger >  zid1000y;
    touchgfx::ImageButtonStyle< touchgfx::TouchButtonTrigger >  zid100y;
    touchgfx::ImageButtonStyle< touchgfx::TouchButtonTrigger >  zid10y;
    touchgfx::ImageButtonStyle< touchgfx::TouchButtonTrigger >  zid1y;
    touchgfx::ImageButtonStyle< touchgfx::TouchButtonTrigger >  nakass1000y;
    touchgfx::ImageButtonStyle< touchgfx::TouchButtonTrigger >  nakass100y;
    touchgfx::ImageButtonStyle< touchgfx::TouchButtonTrigger >  nakass10y;
    touchgfx::ImageButtonStyle< touchgfx::TouchButtonTrigger >  nakass1y;
    touchgfx::Container xCont;
    touchgfx::ScalableImage scalableImage1_1_1;
    touchgfx::TextAreaWithOneWildcard valX;
    touchgfx::ImageButtonStyle< touchgfx::TouchButtonTrigger >  zid1000x;
    touchgfx::ImageButtonStyle< touchgfx::TouchButtonTrigger >  zid100x;
    touchgfx::ImageButtonStyle< touchgfx::TouchButtonTrigger >  zid10x;
    touchgfx::ImageButtonStyle< touchgfx::TouchButtonTrigger >  zid1x;
    touchgfx::ImageButtonStyle< touchgfx::TouchButtonTrigger >  nakass1000x;
    touchgfx::ImageButtonStyle< touchgfx::TouchButtonTrigger >  nakass100x;
    touchgfx::ImageButtonStyle< touchgfx::TouchButtonTrigger >  nakass10x;
    touchgfx::ImageButtonStyle< touchgfx::TouchButtonTrigger >  nakass1x;
    touchgfx::Container BackCnt;
    touchgfx::BoxWithBorderButtonStyle< touchgfx::TouchButtonTrigger >  BackButton;
    touchgfx::TextArea Back;
    touchgfx::TextArea Xpos;
    touchgfx::TextArea Ypos;

    /*
     * Wildcard Buffers
     */
    static const uint16_t VALROTATION_SIZE = 10;
    touchgfx::Unicode::UnicodeChar valRotationBuffer[VALROTATION_SIZE];
    static const uint16_t VALY_SIZE = 10;
    touchgfx::Unicode::UnicodeChar valYBuffer[VALY_SIZE];
    static const uint16_t VALX_SIZE = 10;
    touchgfx::Unicode::UnicodeChar valXBuffer[VALX_SIZE];

private:

    /*
     * Callback Declarations
     */
    touchgfx::Callback<Screen3ViewBase, const touchgfx::AbstractButtonContainer&> flexButtonCallback;

    /*
     * Callback Handler Declarations
     */
    void flexButtonCallbackHandler(const touchgfx::AbstractButtonContainer& src);

};

#endif // SCREEN3VIEWBASE_HPP
