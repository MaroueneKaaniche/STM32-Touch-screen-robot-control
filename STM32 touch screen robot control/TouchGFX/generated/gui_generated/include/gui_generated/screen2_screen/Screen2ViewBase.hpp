/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#ifndef SCREEN2VIEWBASE_HPP
#define SCREEN2VIEWBASE_HPP

#include <gui/common/FrontendApplication.hpp>
#include <mvp/View.hpp>
#include <gui/screen2_screen/Screen2Presenter.hpp>
#include <touchgfx/widgets/Box.hpp>
#include <touchgfx/widgets/ScalableImage.hpp>
#include <touchgfx/containers/Container.hpp>
#include <touchgfx/containers/buttons/Buttons.hpp>
#include <touchgfx/widgets/TextAreaWithWildcard.hpp>
#include <touchgfx/widgets/TextArea.hpp>

class Screen2ViewBase : public touchgfx::View<Screen2Presenter>
{
public:
    Screen2ViewBase();
    virtual ~Screen2ViewBase();
    virtual void setupScreen();
    virtual void afterTransition();

    /*
     * Virtual Action Handlers
     */
    virtual void p100()
    {
        // Override and implement this function in Screen2
    }
    virtual void p10()
    {
        // Override and implement this function in Screen2
    }
    virtual void p1()
    {
        // Override and implement this function in Screen2
    }
    virtual void p01()
    {
        // Override and implement this function in Screen2
    }
    virtual void p001()
    {
        // Override and implement this function in Screen2
    }
    virtual void p0001()
    {
        // Override and implement this function in Screen2
    }
    virtual void p00001()
    {
        // Override and implement this function in Screen2
    }
    virtual void p000001()
    {
        // Override and implement this function in Screen2
    }
    virtual void m100()
    {
        // Override and implement this function in Screen2
    }
    virtual void m10()
    {
        // Override and implement this function in Screen2
    }
    virtual void m1()
    {
        // Override and implement this function in Screen2
    }
    virtual void m01()
    {
        // Override and implement this function in Screen2
    }
    virtual void m001()
    {
        // Override and implement this function in Screen2
    }
    virtual void m0001()
    {
        // Override and implement this function in Screen2
    }
    virtual void m00001()
    {
        // Override and implement this function in Screen2
    }
    virtual void m000001()
    {
        // Override and implement this function in Screen2
    }
    virtual void ChangeE()
    {
        // Override and implement this function in Screen2
    }
    virtual void ChangeS()
    {
        // Override and implement this function in Screen2
    }
    virtual void ChangeRW()
    {
        // Override and implement this function in Screen2
    }
    virtual void ChangeLW()
    {
        // Override and implement this function in Screen2
    }
    virtual void SetTuningRobotSghir()
    {
        // Override and implement this function in Screen2
    }

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
    }

    /*
     * Member Declarations
     */
    touchgfx::Box __background;
    touchgfx::ScalableImage scalableImage2;
    touchgfx::Container containeValue;
    touchgfx::ScalableImage scalableImage1;
    touchgfx::ImageButtonStyle< touchgfx::TouchButtonTrigger >  zid10000000;
    touchgfx::ImageButtonStyle< touchgfx::TouchButtonTrigger >  nakass10000000;
    touchgfx::ImageButtonStyle< touchgfx::TouchButtonTrigger >  nakass1000000;
    touchgfx::ImageButtonStyle< touchgfx::TouchButtonTrigger >  zid1000000;
    touchgfx::ImageButtonStyle< touchgfx::TouchButtonTrigger >  zid100000;
    touchgfx::ImageButtonStyle< touchgfx::TouchButtonTrigger >  nakass100000;
    touchgfx::TextAreaWithOneWildcard valeur;
    touchgfx::ImageButtonStyle< touchgfx::TouchButtonTrigger >  zid10000;
    touchgfx::ImageButtonStyle< touchgfx::TouchButtonTrigger >  nakass10000;
    touchgfx::ImageButtonStyle< touchgfx::TouchButtonTrigger >  zid1000;
    touchgfx::ImageButtonStyle< touchgfx::TouchButtonTrigger >  nakass1000;
    touchgfx::ImageButtonStyle< touchgfx::TouchButtonTrigger >  nakass100;
    touchgfx::ImageButtonStyle< touchgfx::TouchButtonTrigger >  zid100;
    touchgfx::ImageButtonStyle< touchgfx::TouchButtonTrigger >  zid10;
    touchgfx::ImageButtonStyle< touchgfx::TouchButtonTrigger >  nakass10;
    touchgfx::ImageButtonStyle< touchgfx::TouchButtonTrigger >  zid1;
    touchgfx::ImageButtonStyle< touchgfx::TouchButtonTrigger >  nakass1;
    touchgfx::ScalableImage scalableImage1_2;
    touchgfx::TextAreaWithOneWildcard currentEA;
    touchgfx::TextArea EntreAxeString;
    touchgfx::TextArea WheelRdString;
    touchgfx::TextArea WheelsString;
    touchgfx::Container BRcontainer;
    touchgfx::BoxWithBorderButtonStyle< touchgfx::TouchButtonTrigger >  BackButton;
    touchgfx::TextArea Back;
    touchgfx::ScalableImage scalableImage1_2_1;
    touchgfx::TextAreaWithOneWildcard currentWS;
    touchgfx::ScalableImage scalableImage1_2_1_1;
    touchgfx::TextAreaWithOneWildcard currentRWD;
    touchgfx::TextArea WheelLdString;
    touchgfx::ScalableImage scalableImage1_2_1_1_1;
    touchgfx::TextAreaWithOneWildcard currentLWD;
    touchgfx::Container changeEA;
    touchgfx::BoxWithBorderButtonStyle< touchgfx::TouchButtonTrigger >  ChangeEA;
    touchgfx::TextArea textArea1;
    touchgfx::Container changeWS;
    touchgfx::BoxWithBorderButtonStyle< touchgfx::TouchButtonTrigger >  ChangeWS;
    touchgfx::TextArea textArea1_1;
    touchgfx::Container changeRWD;
    touchgfx::BoxWithBorderButtonStyle< touchgfx::TouchButtonTrigger >  ChangeRWD;
    touchgfx::TextArea textArea1_1_1;
    touchgfx::Container changeLWD;
    touchgfx::BoxWithBorderButtonStyle< touchgfx::TouchButtonTrigger >  ChangeLWD;
    touchgfx::TextArea textArea1_1_1_1;

    /*
     * Wildcard Buffers
     */
    static const uint16_t VALEUR_SIZE = 10;
    touchgfx::Unicode::UnicodeChar valeurBuffer[VALEUR_SIZE];
    static const uint16_t CURRENTEA_SIZE = 200;
    touchgfx::Unicode::UnicodeChar currentEABuffer[CURRENTEA_SIZE];
    static const uint16_t CURRENTWS_SIZE = 200;
    touchgfx::Unicode::UnicodeChar currentWSBuffer[CURRENTWS_SIZE];
    static const uint16_t CURRENTRWD_SIZE = 200;
    touchgfx::Unicode::UnicodeChar currentRWDBuffer[CURRENTRWD_SIZE];
    static const uint16_t CURRENTLWD_SIZE = 200;
    touchgfx::Unicode::UnicodeChar currentLWDBuffer[CURRENTLWD_SIZE];

private:

    /*
     * Callback Declarations
     */
    touchgfx::Callback<Screen2ViewBase, const touchgfx::AbstractButtonContainer&> flexButtonCallback;

    /*
     * Callback Handler Declarations
     */
    void flexButtonCallbackHandler(const touchgfx::AbstractButtonContainer& src);

};

#endif // SCREEN2VIEWBASE_HPP
