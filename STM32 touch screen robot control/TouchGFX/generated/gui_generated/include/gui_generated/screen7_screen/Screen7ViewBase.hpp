/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#ifndef SCREEN7VIEWBASE_HPP
#define SCREEN7VIEWBASE_HPP

#include <gui/common/FrontendApplication.hpp>
#include <mvp/View.hpp>
#include <gui/screen7_screen/Screen7Presenter.hpp>
#include <touchgfx/widgets/Box.hpp>
#include <touchgfx/widgets/ScalableImage.hpp>
#include <touchgfx/containers/Container.hpp>
#include <touchgfx/containers/buttons/Buttons.hpp>
#include <touchgfx/widgets/TextArea.hpp>
#include <touchgfx/widgets/TextAreaWithWildcard.hpp>

class Screen7ViewBase : public touchgfx::View<Screen7Presenter>
{
public:
    Screen7ViewBase();
    virtual ~Screen7ViewBase();
    virtual void setupScreen();
    virtual void afterTransition();

    /*
     * Virtual Action Handlers
     */
    virtual void ResetAndGo()
    {
        // Override and implement this function in Screen7
    }
    virtual void ReceiveScore()
    {
        // Override and implement this function in Screen7
    }

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
    }

    /*
     * Member Declarations
     */
    touchgfx::Box __background;
    touchgfx::ScalableImage scalableImage2;
    touchgfx::Container SOCnt;
    touchgfx::BoxWithBorderButtonStyle< touchgfx::TouchButtonTrigger >  SOButton;
    touchgfx::TextArea Sostring;
    touchgfx::Container containerTime;
    touchgfx::ScalableImage scalableImage1;
    touchgfx::TextAreaWithOneWildcard valTime;
    touchgfx::TextArea TimeString;
    touchgfx::Container containerScore;
    touchgfx::ScalableImage scalableImage1_1;
    touchgfx::TextAreaWithOneWildcard valScore;
    touchgfx::TextArea scoreString;

    /*
     * Wildcard Buffers
     */
    static const uint16_t VALTIME_SIZE = 10;
    touchgfx::Unicode::UnicodeChar valTimeBuffer[VALTIME_SIZE];
    static const uint16_t VALSCORE_SIZE = 200;
    touchgfx::Unicode::UnicodeChar valScoreBuffer[VALSCORE_SIZE];

private:

    /*
     * Callback Declarations
     */
    touchgfx::Callback<Screen7ViewBase, const touchgfx::AbstractButtonContainer&> flexButtonCallback;

    /*
     * Callback Handler Declarations
     */
    void flexButtonCallbackHandler(const touchgfx::AbstractButtonContainer& src);

};

#endif // SCREEN7VIEWBASE_HPP
