/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#include <gui_generated/screen1_1_1_screen/Screen1_1_1ViewBase.hpp>
#include <touchgfx/Color.hpp>
#include <images/BitmapDatabase.hpp>
#include <texts/TextKeysAndLanguages.hpp>

Screen1_1_1ViewBase::Screen1_1_1ViewBase() :
    flexButtonCallback(this, &Screen1_1_1ViewBase::flexButtonCallbackHandler)
{
    __background.setPosition(0, 0, 480, 272);
    __background.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    add(__background);

    scalableImage2.setBitmap(touchgfx::Bitmap(BITMAP_BACKGROUND_ID));
    scalableImage2.setPosition(0, 0, 480, 272);
    scalableImage2.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
    add(scalableImage2);

    TestingRKContainer.setPosition(109, 45, 121, 183);
    TestingRKButton.setBoxWithBorderPosition(0, 0, 121, 183);
    TestingRKButton.setBorderSize(5);
    TestingRKButton.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(52, 55, 67), touchgfx::Color::getColorFromRGB(173, 177, 178), touchgfx::Color::getColorFromRGB(24, 33, 41), touchgfx::Color::getColorFromRGB(88, 91, 94));
    TestingRKButton.setPosition(0, 0, 121, 183);
    TestingRKContainer.add(TestingRKButton);

    TestingRK.setXY(24, 52);
    TestingRK.setColor(touchgfx::Color::getColorFromRGB(250, 247, 247));
    TestingRK.setLinespacing(0);
    TestingRK.setTypedText(touchgfx::TypedText(T___SINGLEUSE_0IPD));
    TestingRKContainer.add(TestingRK);

    add(TestingRKContainer);

    TestingRSContainer.setPosition(250, 45, 121, 183);
    TestingRSButton.setBoxWithBorderPosition(0, 0, 121, 183);
    TestingRSButton.setBorderSize(5);
    TestingRSButton.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(52, 55, 67), touchgfx::Color::getColorFromRGB(173, 177, 178), touchgfx::Color::getColorFromRGB(24, 33, 41), touchgfx::Color::getColorFromRGB(88, 91, 94));
    TestingRSButton.setAction(flexButtonCallback);
    TestingRSButton.setPosition(0, 0, 121, 183);
    TestingRSContainer.add(TestingRSButton);

    TestingRS.setXY(24, 52);
    TestingRS.setColor(touchgfx::Color::getColorFromRGB(250, 247, 247));
    TestingRS.setLinespacing(0);
    TestingRS.setTypedText(touchgfx::TypedText(T___SINGLEUSE_WEMW));
    TestingRSContainer.add(TestingRS);

    add(TestingRSContainer);

    BackCnt.setPosition(0, 0, 480, 43);
    BackButton.setBoxWithBorderPosition(0, 0, 480, 31);
    BackButton.setBorderSize(5);
    BackButton.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(52, 55, 67), touchgfx::Color::getColorFromRGB(173, 177, 178), touchgfx::Color::getColorFromRGB(24, 33, 41), touchgfx::Color::getColorFromRGB(88, 91, 94));
    BackButton.setAction(flexButtonCallback);
    BackButton.setPosition(0, 0, 480, 31);
    BackCnt.add(BackButton);

    Back.setPosition(0, 6, 480, 25);
    Back.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    Back.setLinespacing(0);
    Back.setTypedText(touchgfx::TypedText(T___SINGLEUSE_HS56));
    BackCnt.add(Back);

    add(BackCnt);
}

Screen1_1_1ViewBase::~Screen1_1_1ViewBase()
{

}

void Screen1_1_1ViewBase::setupScreen()
{

}

void Screen1_1_1ViewBase::flexButtonCallbackHandler(const touchgfx::AbstractButtonContainer& src)
{
    if (&src == &BackButton)
    {
        //BackToMenu
        //When BackButton clicked change screen to Screen1
        //Go to Screen1 with screen transition towards West
        application().gotoScreen1ScreenWipeTransitionWest();
    }
    if (&src == &TestingRSButton)
    {
        //GoTesting
        //When TestingRSButton clicked change screen to Screen3
        //Go to Screen3 with screen transition towards East
        application().gotoScreen3ScreenWipeTransitionEast();
    }
}
