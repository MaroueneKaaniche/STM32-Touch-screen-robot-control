/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#include <gui_generated/screen1_1_screen/Screen1_1ViewBase.hpp>
#include <touchgfx/Color.hpp>
#include <images/BitmapDatabase.hpp>
#include <texts/TextKeysAndLanguages.hpp>

Screen1_1ViewBase::Screen1_1ViewBase() :
    flexButtonCallback(this, &Screen1_1ViewBase::flexButtonCallbackHandler)
{
    __background.setPosition(0, 0, 480, 272);
    __background.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    add(__background);

    scalableImage2.setBitmap(touchgfx::Bitmap(BITMAP_BACKGROUND_ID));
    scalableImage2.setPosition(0, 0, 480, 272);
    scalableImage2.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
    add(scalableImage2);

    TuningRKContainer.setPosition(109, 45, 121, 183);
    TuningRKButton.setBoxWithBorderPosition(0, 0, 121, 183);
    TuningRKButton.setBorderSize(5);
    TuningRKButton.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(52, 55, 67), touchgfx::Color::getColorFromRGB(173, 177, 178), touchgfx::Color::getColorFromRGB(24, 33, 41), touchgfx::Color::getColorFromRGB(88, 91, 94));
    TuningRKButton.setPosition(0, 0, 121, 183);
    TuningRKContainer.add(TuningRKButton);

    TuningRK.setXY(29, 52);
    TuningRK.setColor(touchgfx::Color::getColorFromRGB(250, 247, 247));
    TuningRK.setLinespacing(0);
    TuningRK.setTypedText(touchgfx::TypedText(T___SINGLEUSE_LXDR));
    TuningRKContainer.add(TuningRK);

    add(TuningRKContainer);

    TuningRSContainer.setPosition(250, 45, 121, 183);
    TuningRSButton.setBoxWithBorderPosition(0, 0, 121, 183);
    TuningRSButton.setBorderSize(5);
    TuningRSButton.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(52, 55, 67), touchgfx::Color::getColorFromRGB(173, 177, 178), touchgfx::Color::getColorFromRGB(24, 33, 41), touchgfx::Color::getColorFromRGB(88, 91, 94));
    TuningRSButton.setAction(flexButtonCallback);
    TuningRSButton.setPosition(0, 0, 121, 183);
    TuningRSContainer.add(TuningRSButton);

    TuningRS.setXY(29, 52);
    TuningRS.setColor(touchgfx::Color::getColorFromRGB(250, 247, 247));
    TuningRS.setLinespacing(0);
    TuningRS.setTypedText(touchgfx::TypedText(T___SINGLEUSE_LBVM));
    TuningRSContainer.add(TuningRS);

    add(TuningRSContainer);

    BackCnt.setPosition(0, 0, 480, 43);
    BackButton.setBoxWithBorderPosition(0, 0, 480, 31);
    BackButton.setBorderSize(5);
    BackButton.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(52, 55, 67), touchgfx::Color::getColorFromRGB(173, 177, 178), touchgfx::Color::getColorFromRGB(24, 33, 41), touchgfx::Color::getColorFromRGB(88, 91, 94));
    BackButton.setAction(flexButtonCallback);
    BackButton.setPosition(0, 0, 480, 31);
    BackCnt.add(BackButton);

    Back.setPosition(0, 6, 480, 25);
    Back.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    Back.setLinespacing(0);
    Back.setTypedText(touchgfx::TypedText(T___SINGLEUSE_CPQY));
    BackCnt.add(Back);

    add(BackCnt);
}

Screen1_1ViewBase::~Screen1_1ViewBase()
{

}

void Screen1_1ViewBase::setupScreen()
{

}

void Screen1_1ViewBase::flexButtonCallbackHandler(const touchgfx::AbstractButtonContainer& src)
{
    if (&src == &BackButton)
    {
        //BackToMenu
        //When BackButton clicked change screen to Screen1
        //Go to Screen1 with screen transition towards East
        application().gotoScreen1ScreenWipeTransitionEast();
    }
    if (&src == &TuningRSButton)
    {
        //GoTuning
        //When TuningRSButton clicked change screen to Screen2
        //Go to Screen2 with screen transition towards West
        application().gotoScreen2ScreenWipeTransitionWest();
    }
}
